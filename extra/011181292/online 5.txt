import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;

public class Online5_Server {
    static networkutil saif;

    public static void main(String[] args) throws IOException {

        ServerSocket server=null;
        Socket s1=null;
        server=new ServerSocket(5000);
        System.out.println("Just waiting few second for accept your connection");
        System.out.println("Clint connected");
        saif=new networkutil(s1);
        Object obj=null;

        while (true){
            obj=saif.read();
            String string=(String)obj;
            if(string.equals("A")) {
                saif.write("Apple");
            }
            else if(string.equals("B")) {
                saif.write("Ball");
            }
            else if (string.equals("C")) {
                saif.write("Cat");
            }
            else  {
                saif.write("Thanks For Try");
            }
            System.out.println(obj);
            break;
        }
    }
}


import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;

class networkutil {

    public Socket socket;
    public ObjectOutputStream oos;
    public ObjectInputStream ois;

    public networkutil(String s, int port) {
        try {
            this.socket=new Socket(s,port);
            oos=new ObjectOutputStream(socket.getOutputStream());
            ois=new ObjectInputStream(socket.getInputStream());
        } catch (Exception e) {
            System.out.println("In NetworkUtil : " + e.toString());
        }
    }

    public networkutil(Socket s) {
        try {
            this.socket = s;
            oos=new ObjectOutputStream(socket.getOutputStream());
            ois=new ObjectInputStream(socket.getInputStream());
        } catch (Exception e) {
            System.out.println("In NetworkUtil : " + e.toString());
        }
    }

    public Object read() {
        Object o = null;
        try {
            o=ois.readObject();
        } catch (Exception e) {
            //System.out.println("Reading Error in network : " + e.toString());
        }
        return o;
    }

    public void write(Object o) {
        try {
            oos.writeObject(o);
        } catch (IOException e) {
            System.out.println("Writing  Error in network : " + e.toString());
        }
    }

    public void closeConnection() {
        try {
            ois.close();
            oos.close();
        } catch (Exception e) {
            System.out.println("Closing Error in network : "  + e.toString());
        }
    }


//N.B:End of server code______________



--------------------------------------------------------------------------------------------------------------------------
**Clint Part start from here:
_____________________________



import java.util.Scanner;

public class Online5_Clint {
    static networkutil saif;

    public static void main(String[] args)  {

        saif=new networkutil("192.168.1.109 ",5000);
        Object o=null;
        Scanner scan=new Scanner(System.in);
        String stn=scan.next();
        while (true){
            saif.write(stn);
            o=  saif.read();
            System.out.println(o);
            break;
        }
    }
}



import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;


public class networkutil {

    public Socket socket;
    public ObjectOutputStream oos;
    public ObjectInputStream ois;

    public networkutil(String s, int port) {
        try {
            this.socket=new Socket(s,port);
            oos=new ObjectOutputStream(socket.getOutputStream());
            ois=new ObjectInputStream(socket.getInputStream());
        } catch (Exception e) {
            System.out.println("In NetworkUtil : " + e.toString());
        }
    }

    public networkutil(Socket s) {
        try {
            this.socket = s;
            oos=new ObjectOutputStream(socket.getOutputStream());
            ois=new ObjectInputStream(socket.getInputStream());
        } catch (Exception e) {
            System.out.println("In NetworkUtil : " + e.toString());
        }
    }

    public Object read() {
        Object o = null;
        try {
            o=ois.readObject();
        } catch (Exception e) {
            //System.out.println("Reading Error in network : " + e.toString());
        }
        return o;
    }

    public void write(Object o) {
        try {
            oos.writeObject(o);
        } catch (IOException e) {
            System.out.println("Writing  Error in network : " + e.toString());
        }
    }

    public void closeConnection() {
        try {
            ois.close();
            oos.close();
        } catch (Exception e) {
            System.out.println("Closing Error in network : "  + e.toString());
        }
    }

}


}